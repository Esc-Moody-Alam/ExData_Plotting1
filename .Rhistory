install.packages(c("anytime", "assertthat", "backports", "boot", "car", "cluster", "curl", "DBI", "dplyr", "evaluate", "foreign", "formatR", "htmltools", "htmlwidgets", "httpuv", "jsonlite", "knitr", "lattice", "lme4", "markdown", "MASS", "Matrix", "memoise", "mgcv", "mongolite", "pbkrtest", "plotly", "purrr", "quantreg", "R6", "Rcpp", "RcppEigen", "rmarkdown", "rpart", "RSQLite", "shiny", "sourcetools", "SparseM", "stringi", "survival", "tibble", "tidyr", "viridis", "viridisLite", "xts", "zoo"))
?Devices
examples(points)
f <- rep(0:1, each=50)
f
library(swirl)
swirl()
head(pollution)
dim(pollution)
summary(pollution$pm25)
quantile(ppm)
boxplot(ppm, color=blue)
boxplot(ppm, color='blue')
boxplot(ppm, color="blue")
boxplot(ppm, col="blue")
abline(h=12)
hist(ppm, col="green")
rug(ppm)
low
high
hist(ppm, col="green", breaks=100)
rug(ppm)
hist(ppm, col="green")
abline(v=12, lwd=2)
abline(v=median(ppm), lwd=2)
abline(v=median(ppm), col="magenta", lwd=4)
names(pollution)
table(pollution$region)
reg <- table(pollution$region)
reg
barplot(reg, col="wheat", main="Number of Counties in Each Region")
box(data=pollution, pm25~region, col="green")
box(pm25~region, data=pollution, col="green")
boxplot(pm25~region, data=pollution, col="green")
boxplot(pm25~region, data=pollution, col="red")
pollution$pm25
pollution$pm25 ~ pollution$region
ab <- pollution$pm25 ~ pollution$region
str(ab)
ab
par(mfrow = c(2, 1), mar = c(4, 4, 2, 1))
east
d
pollution
east <- subset(pollution,region=="east")
head(easet)
head(east)
hist(east$pm25, col = "green")
hist(subset(pollution, region="west")$pm25, col = "green")
hist(subset(pollution, region=="west")$pm25, col = "green")
head(pollution)
with(pollution, plot(latitude, pm25))
with(pollution, plot(latitude, pm25, lwd=2, lty=2))
abline(h = 12, lwd = 2, lty = 2)
head(pollution)
plot(pollution$latitude, ppm, col = pollution$region)
abline(h=12, lwd=2, lty=2)
par(mfrow = c(1, 2), mar = c(5, 4, 2, 1))
head(pollution)
west <- subset(pollution,region=="west")
plot(west$latitude, west$pm25, main = "West")
plot(east$latitude, east$pm25, main = "East")
exit()
quit()
library(swirl)
swirl()
?Devices
plot(faithful)
with(faithful, plot(eruptions, waiting))
title(main="Old Faithful Geyser data")
dev.cur()
pdf(file="myplot.pdf")
title(main="Old Faithful Geyser data")
with(faithful, plot(eruptions, waiting))
title(main="Old Faithful Geyser data")
dev.cur()
dev.off()
dev.cur()
with(faithful, plot(eruptions, waiting))
title(main="Old Faithful Geyser data")
dev.copy(png, file="geyserplot.png")
dev.off()
head(cars)
with(cars,plot(speed, dist))
text(x=mean(cars$speed), y=mean(cars$dist), "SWIRL rules")
text(x=mean(cars$speed), y=mean(cars$dist), "SWIRL rules!")
text(mean(cars$speed),max(cars$dist),"SWIRL rules!")
head(state)
table(state$region)
xyplot(Life.Exp ~ Income | region, data=state, layout=c(4,1))
xyplot(Life.Exp ~ Income | region, data=state, layout=c(2,2))
head(mpg)
dim(mpg)
table(mpg$model)
qplot(disp, hwy, data=mpg)
qplot(displ, hwy, data=mpg)
head(airquality)
range(airquality$Ozone, na.rm = TRUE)
hist(airquality$Ozone)
boxplot(airquality$Month)
table(airquality$Month)
boxplot(Ozone~Month, airquality)
boxplot(Ozone~Month, airquality, xlab="Month", ylab="Ozone(pb)")
boxplot(Ozone~Month, airquality, xlab="Month", ylab="Ozone (ppb)",col.axis="blue",col.lab="red")
title(main="Ozone and Wind in New York City")
with(airquality, plot(Wind, Ozone)
)
title(main="Ozone and Wind in New York City")
par()
length(par())
names(par())
par()$pin
par()$fg
par("pch")
par("lty")
plot(airquality$Wind, airquality$Ozone,lty="n")
plot(airquality$Wind, airquality$Ozone)
plot(airquality$Wind, airquality$Ozone, type="n")
title(main="Wind and Ozone NYC")
title(main="Wind and Ozone in NYC")
may <- subset(airquality,subset = airquality$Month, 5)
?subset
may <- subset(airquality,subset = airquality$Month==5)
may <- subset(airquality,Month==5)
points(Win )
points(Wind)
points(airqualityWind)
points(airquality$Wind)
points(may$Wind,may$Ozone,col="blue",pch=17)
notmay <- subset(airquality,Month!=5)
plot(airquality)
points(notmay$Wind,notmay$Ozone,col="red",pch=8)
plot(airquality)
legend("topright",pch=c(17,8),col=c("blue","red"),legend=c("May","Other Months"))
abline(v=airquality$Wind, lty=2)
abline(v=median(airquality$Wind),lty=2,lwd=2)
plot(airquality)
par(mfrow=c(1,2))
plot(airquality$Wind, airquality$Ozone, main="Ozone and Wind")
plot(airquality$Ozone, airquality$Solar.R, main="Ozone and Solar Radiation")
plot(airquality)
par(mfrow = c(1, 3), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
plot(airquality)
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality)
plot(airquality$Solar.R, airquality$Ozone, main = "Ozone and Solar Radiation")
plot(airquality)
plot(airquality$Temp, airquality$Ozone, main = "Ozone and Temperature")
title(main="Ozone and Weather in New York City")
mtext("Ozone and Weather in New York City", outer = TRUE)
0
clc
setwd("Course4-ExploratoryDataAnalysis/Week1/ExData_Plotting1/")
file.create("Coursework1-CreatingPlots.R")
source("Coursework1-CreatingPlots.R")
open("Coursework1-CreatingPlots.R")
edit("Coursework1-CreatingPlots.R")
data = read.csv("household_power_consumption.txt")
object.size(data)
object.size(data, unit="mb")
object.size(data, units="mb")
?object.size
object.size(data, units="Mb")
format(object.size(data), units="auto")
rm(data\)
rm(data)
data = table.read("household_power_consumption.txt")
data = read.table("household_power_consumption.txt")
format(object.size(data), units="auto")
head(data)
data[1]
data[1,1]
source("Coursework1-CreatingPlots.R")
tt = 16/12/2006;17:24:00;4.216;0.418;234.840;18.400;0.000;1.000;17.000
tt = "16/12/2006;17:24:00;4.216;0.418;234.840;18.400;0.000;1.000;17.000"
tt
grep(tt, ';')
grep(tt, ";")
sub(tt, ";")
sub(";", tt)
?sub
grep(";", tt)
grep(";", tt, value = TRUE)
grep(';', tt, value = TRUE)
grep(';', tt)
library(stringr)
str_locate(tt, ";")
uhlist(str_locate(tt, ";"))
unlist(str_locate(tt, ";"))
str_locate(tt, ";")[1]
source()
source("Coursework1-CreatingPlots.R")
tt
line = tt
date = substr(line,1,str_locate(line, ";")[1])
date
date = substr(line,1,str_locate(line, ";")[1]-1)
date
source("Coursework1-CreatingPlots.R")
line
split(line, ";")
unlist(split(line, ";"))
str_split(line, ";")
source("Coursework1-CreatingPlots.R")
df = data.frame()
str(df)
colnames(df) <- str_split(line, ";")
df = data.frame(colnames(str_split(line, ";")))
df
?data.frame
source("Coursework1-CreatingPlots.R")
df
source("Coursework1-CreatingPlots.R")
df
source("Coursework1-CreatingPlots.R")
df
source("Coursework1-CreatingPlots.R")
df
source("Coursework1-CreatingPlots.R")
df
source("Coursework1-CreatingPlots.R")
df
source("Coursework1-CreatingPlots.R")
df
source("Coursework1-CreatingPlots.R")
df
dim(df)
df <- data.frame(matrix(ncol = 9, nrow = 0))
colnames(df) <- str_split("Date;Time;Global_active_power;Global_reactive_power;Voltage;Global_intensity;Sub_metering_1;Sub_metering_2;Sub_metering_3", ";")
df
df <- data.frame(matrix(ncol = 9, nrow = 0))
colnames(df) <- c(str_split("Date;Time;Global_active_power;Global_reactive_power;Voltage;Global_intensity;Sub_metering_1;Sub_metering_2;Sub_metering_3", ";"))
df
df <- data.frame(matrix(ncol = 9, nrow = 0))
colnames(df) <- c(str_split("Date;Time;Global_active_power;Global_reactive_power;Voltage;Global_intensity;Sub_metering_1;Sub_metering_2;Sub_metering_3", ";"))
colnameS(df)
colnames(df)
nn = str_split("Date;Time;Global_active_power;Global_reactive_power;Voltage;Global_intensity;Sub_metering_1;Sub_metering_2;Sub_metering_3", ";"))
nn = str_split("Date;Time;Global_active_power;Global_reactive_power;Voltage;Global_intensity;Sub_metering_1;Sub_metering_2;Sub_metering_3", ";")
nn
unlist(nn)
df <- data.frame(matrix(ncol = 9, nrow = 0))
colnames(df) <- c(unlist(str_split("Date;Time;Global_active_power;Global_reactive_power;Voltage;Global_intensity;Sub_metering_1;Sub_metering_2;Sub_metering_3", ";")))
df
source("Coursework1-CreatingPlots.R")
df
source("Coursework1-CreatingPlots.R")
warnings
warnings()
source("Coursework1-CreatingPlots.R")
df
source("Coursework1-CreatingPlots.R")
names(df)
tail(df)
table(df$Date)
source("Coursework1-CreatingPlots.R")
